# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: bpapool

variables:
   GCP_PROJECT_ID: "fodekaba2024"
   GCP_REGION: 'us-central1'
   REPO_NAME: 'worker-repository'
   IMAGE_NAME: 'lender-image'
   GOOGLE_CREDENTIALS_FILE: "fodekaba2024-76ce50aed756.json"

stages:
  - stage: Build
    displayName: "Build and Push Docker image"
    jobs:
      - job: Build
        displayName: Build ASP.NET Web API"
        steps:
           - task: UseDotNet@2
             displayName: Install .NET SDK
             inputs:
                packageType: sdk
                version: '8.x'
                installationPath: $(Agent.ToolsDirectory)/dotnet 
           - script: |
              echo "Restoring Nuget APi"
              dotnet restore
             displayName:  Restore depencies.

           - script: |
              echo " Building solution" 
              dotnet build --configuration Release
             displayName: Build Solution  
           - script: |
              echo "Publishing the solution"
              dotnet publish --configuration Release --output ./publish
             displayName: Publish Solution
           - script: |
                echo "Building Docker Image"
                docker build  -t "${GCP_REGION}-docker.pkg.dev/$(GCP_PROJECT_ID)/$(REPO_NAME)/$(IMAGE_NAME)" .
             displayName: Build Docker Image  
           
           - task: DownloadSecureFile@1
             inputs:
              secureFile: $(GOOGLE_CREDENTIALS_FILE)

           - script: |
                  echo "Authenticating with Google Cloud"
                  gcloud auth activate-service-account --key-file=$(Agent.TempDirectory)/$(GOOGLE_CREDENTIALS_FILE)
                  gcloud config set project $(GCP_PROJECT_ID)
                  gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin us-central1-docker.pkg.dev
             displayName: 'Authenticate with Google Cloud'
              
           - script: |
                echo "Pushing Docker image to Artifact Registry"
                docker push "${GCP_REGION}-docker.pkg.dev/$(GCP_PROJECT_ID)/$(REPO_NAME)/$(IMAGE_NAME)"
             displayName: 'Push Docker Image'

                        